{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","current","setCurrent","data","setData","length","useEffect","fetch","then","response","console","log","json","myJson","className","onClick","map","item","index","src","image","alt","name","knownFor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA4DeA,MAzDf,WAAgB,IAAD,EACiBC,mBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAGPC,EAASF,EAAKE,OAwBpB,OAXAC,qBAAU,WAVRC,MAAM,cACHC,MAAK,SAAUC,GAEd,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAEjBJ,MAAK,SAAUK,GACdH,QAAQC,IAAIE,GACZT,EAAQS,QAKX,IACHH,QAAQC,IAAIV,GASV,8BACE,sBAAKa,UAAU,sBAAf,UACE,wBAAQA,UAAU,OAAOC,QAVT,WACpBb,EAAuB,IAAZD,EAAgBI,EAAS,EAAIJ,EAAU,IAS9C,kBAGCE,GACCA,EAAKE,OAAS,GACdF,EAAKa,KAAI,SAACC,EAAMC,GACd,OACE,sBACEJ,UAAWI,IAAUjB,EAAU,kBAAoB,WADrD,UAGE,mBAAGa,UAAU,YAAb,uBACA,qBAAKK,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,OAChC,sBAAKR,UAAU,eAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBG,EAAKK,OAC5B,mBAAGR,UAAU,YAAb,SAA0BG,EAAKM,gBAL5BL,MAUb,wBAAQJ,UAAU,OAAOC,QA1Bb,WAChBb,EAAWD,IAAYI,EAAS,EAAI,EAAIJ,EAAU,IAyB9C,wBCxCOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.65d6b38f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [current, setCurrent] = useState(0);\n  const [data, setData] = useState([]);\n  const length = data.length;\n\n  const getData = () => {\n    fetch('/data.json')\n      .then(function (response) {\n        console.log(response);\n        return response.json();\n      })\n      .then(function (myJson) {\n        console.log(myJson);\n        setData(myJson);\n      });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(current);\n  const previousSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  return (\n    <div>\n      <div className='slideshow-container'>\n        <button className='prev' onClick={previousSlide}>\n          prev\n        </button>\n        {data &&\n          data.length > 0 &&\n          data.map((item, index) => {\n            return (\n              <div\n                className={index === current ? 'mySlides active' : 'mySlides'}\n                key={index}>\n                <p className='app-title'>Storybook</p>\n                <img src={item.image} alt={item.name} />\n                <div className='heading-text'>\n                  <h2 className='title'>{item.name}</h2>\n                  <p className='known-for'>{item.knownFor}</p>\n                </div>\n              </div>\n            );\n          })}\n        <button className='next' onClick={nextSlide}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}